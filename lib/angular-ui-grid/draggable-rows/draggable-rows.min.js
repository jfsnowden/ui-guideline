!function(){"use strict";angular.module("ui.grid.draggable-rows",["ui.grid"]).constant("uiGridDraggableRowsConstants",{featureName:"draggableRows",ROW_TARGET_CLASS:"ui-grid-draggable-row-target",ROW_OVER_CLASS:"ui-grid-draggable-row-over",ROW_OVER_ABOVE_CLASS:"ui-grid-draggable-row-over--above",ROW_OVER_BELOW_CLASS:"ui-grid-draggable-row-over--below",ROW_HANDLE_CLASS:"ui-grid-draggable-row-handle",POSITION_ABOVE:"above",POSITION_BELOW:"below",publicEvents:{draggableRows:{rowDragged:function(e,r,t){},rowDropped:function(e,r,t){},rowOverRow:function(e,r,t){},rowEnterRow:function(e,r,t){},rowLeavesRow:function(e,r,t){},rowFinishDrag:function(e){},beforeRowMove:function(e,r,t,n){}}}}).factory("uiGridDraggableRowsCommon",[function(){return{draggedRow:null,draggedRowEntity:null,targetRow:null,targetRowEntity:null,position:null,fromIndex:null,toIndex:null,dragDisabled:!1}}]).factory("uiGridDraggableRowsSettings",[function(){return{dragDisabled:!1}}]).service("uiGridDraggableRowsService",["uiGridDraggableRowsConstants","uiGridDraggableRowsCommon","uiGridDraggableRowsSettings",function(e,r,t){var n={dragndrop:{setDragDisabled:function(e){t.dragDisabled=~~e}}};this.initializeGrid=function(r,t,i){r.api.registerEventsFromObject(e.publicEvents),r.api.registerMethodsFromObject(n),r.api.draggableRows.on.rowFinishDrag(t,function(){angular.forEach(i[0].querySelectorAll("."+e.ROW_OVER_CLASS),function(r){r.classList.remove(e.ROW_OVER_CLASS),r.classList.remove(e.ROW_OVER_ABOVE_CLASS),r.classList.remove(e.ROW_OVER_BELOW_CLASS)}),angular.forEach(i[0].querySelectorAll("."+e.ROW_TARGET_CLASS),function(r){r.classList.remove(e.ROW_TARGET_CLASS)})})}}]).service("uiGridDraggableRowService",["uiGridDraggableRowsConstants","uiGridDraggableRowsCommon","uiGridDraggableRowsSettings","$parse",function(e,r,t,n){var i=function(e,r,t){t.api.draggableRows.raise.beforeRowMove(e,r,this),this.splice(r,0,this.splice(e,1)[0])};this.prepareDraggableRow=function(a,o){var s=a.grid,g=o[0],d=a.grid.options.useUiGridDraggableRowsHandle,l=null,u=null,R=function(){return angular.isString(s.options.data)?n(s.options.data)(s.appScope):s.options.data};!function(){var e=null;s.api.hasOwnProperty("edit")&&(s.api.edit.on.beginCellEdit(null,function(){e=g.getAttribute("draggable"),g.setAttribute("draggable",!1)}),s.api.edit.on.afterCellEdit(null,function(){g.setAttribute("draggable",e),e=null}))}();var v={onMouseDownEventListener:function(r){l=angular.element(r.target),u=l.closest("."+e.ROW_HANDLE_CLASS,o)[0]},onMouseUpEventListener:function(e){l=null,u=null},onDragOverEventListener:function(t){t.preventDefault&&t.preventDefault();var n=t.dataTransfer||t.originalEvent.dataTransfer;n.effectAllowed="copyMove",n.dropEffect="move";var i=t.offsetY||t.layerY||(t.originalEvent?t.originalEvent.offsetY:0);o.addClass(e.ROW_OVER_CLASS),i<this.offsetHeight/2?(r.position=e.POSITION_ABOVE,o.removeClass(e.ROW_OVER_BELOW_CLASS),o.addClass(e.ROW_OVER_ABOVE_CLASS)):(r.position=e.POSITION_BELOW,o.removeClass(e.ROW_OVER_ABOVE_CLASS),o.addClass(e.ROW_OVER_BELOW_CLASS)),s.api.draggableRows.raise.rowOverRow(r,this)},onDragStartEventListener:function(n){return t.dragDisabled||d&&!u?(n.preventDefault(),n.stopPropagation(),!1):(this.classList.add(e.ROW_TARGET_CLASS),n.dataTransfer.setData("Text","move"),r.draggedRow=this,r.draggedRowEntity=a.$parent.$parent.row.entity,r.position=null,r.fromIndex=R().indexOf(r.draggedRowEntity),r.toIndex=null,void s.api.draggableRows.raise.rowDragged(r,this))},onDragLeaveEventListener:function(){this.classList.remove(e.ROW_TARGET_CLASS),this.classList.remove(e.ROW_OVER_CLASS),this.classList.remove(e.ROW_OVER_ABOVE_CLASS),this.classList.remove(e.ROW_OVER_BELOW_CLASS),s.api.draggableRows.raise.rowLeavesRow(r,this)},onDragEnterEventListener:function(){s.api.draggableRows.raise.rowEnterRow(r,this)},onDragEndEventListener:function(){s.api.draggableRows.raise.rowFinishDrag()},onDropEventListener:function(t){var n=r.draggedRow;return t.stopPropagation&&t.stopPropagation(),t.preventDefault&&t.preventDefault(),n===this?!1:(r.toIndex=R().indexOf(a.$parent.$parent.row.entity),r.targetRow=this,r.targetRowEntity=a.$parent.$parent.row.entity,r.position===e.POSITION_ABOVE?r.fromIndex<r.toIndex&&(r.toIndex-=1):r.fromIndex>=r.toIndex&&(r.toIndex+=1),a.$apply(function(){i.apply(R(),[r.fromIndex,r.toIndex,s])}),s.api.draggableRows.raise.rowDropped(r,this),void t.preventDefault())}};g.addEventListener("dragover",v.onDragOverEventListener,!1),g.addEventListener("dragstart",v.onDragStartEventListener,!1),g.addEventListener("dragleave",v.onDragLeaveEventListener,!1),g.addEventListener("dragenter",v.onDragEnterEventListener,!1),g.addEventListener("dragend",v.onDragEndEventListener,!1),g.addEventListener("drop",v.onDropEventListener),d&&(g.addEventListener("mousedown",v.onMouseDownEventListener,!1),g.addEventListener("mouseup",v.onMouseUpEventListener,!1))}}]).directive("uiGridDraggableRow",["uiGridDraggableRowService",function(e){return{restrict:"ACE",scope:{grid:"="},compile:function(){return{pre:function(r,t){e.prepareDraggableRow(r,t)}}}}}]).directive("uiGridDraggableRows",["uiGridDraggableRowsService",function(e){return{restrict:"A",replace:!0,priority:0,require:"uiGrid",scope:!1,compile:function(){return{pre:function(r,t,n,i){e.initializeGrid(i.grid,r,t)}}}}}])}();